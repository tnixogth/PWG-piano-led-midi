
// Simple test of USB Host
//
// This example is in the public domain

#include "USBHost_t36.h"
#include <FastLED.h>
#define NUM_LEDS 144
#define DATA_PIN 11
#define CLOCK_PIN 13
CRGB leds[NUM_LEDS];
USBHost myusb;
MIDIDevice midi1(myusb);


//Designate the rows of the array. First color scheme is [0][0-99], 2nd is [1][0-99].
uint32_t colors[7][73]={{0xD50500,0xD51500,0xD52000,0xD53000,0xD53A00,0xD54A00,0xD55500,0xD56500,0xD57000,0xD58000,0xD58A00,0xD59A00,0xD5A500,0xD5B500,0xD5BF00,0xD5CF00,0xCAD500,0xBFD500,0xAFD500,0xA5D500,0x95D500,0x8AD500,0x7AD500,0x70D500,0x60D500,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
{0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x000000},
{0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x000000},
{0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0x000000},
{0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000},
{0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000},
{0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000,0x009D00,0x004B97,0x000000,0xEAC20B,0x000000,0x790BBB,0x000000,0xFF1A8C,0xD90000,0x000000,0xC46609,0x000000}};



	int flag1 = 0;
	int flag2 = 0;
	int flag3 = 0;
int schemaSelector = 0;
int playingRow = 0;
int selectorbin= 0;

bool lightsOn = true;
int flag = 0;

void setup()
{
  //while (!Serial) ; // wait for Arduino Serial Monitor
  FastLED.addLeds<APA102, DATA_PIN, CLOCK_PIN, BGR>(leds, NUM_LEDS);
  FastLED.setBrightness(255);
	pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, HIGH);   // set the LED on
  Serial.println("USB Host Testing");
  myusb.begin();
  midi1.setHandleNoteOff(OnNoteOff);
  midi1.setHandleNoteOn(OnNoteOn);
}


void loop()
{
  myusb.Task();
  midi1.read();
}


void OnNoteOn(byte channel, byte note, byte velocity)
{
  Serial.print("Note On, ch=");
  Serial.print(channel);
  Serial.print(", note=");
  Serial.print(note);
  Serial.print(", velocity=");
  Serial.print(velocity);
  Serial.println();
  if(lightsOn|| note==106|| note==107|| note==108)
  {
  lookup(note);
	}
}

void OnNoteOff(byte channel, byte note, byte velocity)
{
  Serial.print("Note Off, ch=");
  Serial.print(channel);
  Serial.print(", note=");
  Serial.print(note);
  Serial.println();

  killthelights(note);

}

void lookup(int keyNumber)
{ //Lowest key with a designated light#:25
  //Highest key with a designated light#:104
  //median key#: 65
  //Lowest key on keyboard: 21
  //Highest key on keyboard: 108



	//if it has a light, turn on the light
	if(keyNumber>27&&keyNumber<106)
	{
	leds[144- ((keyNumber-27)*2)] = colors[playingRow][keyNumber-27];
	leds[144- ((keyNumber-27)*2)+1] = colors[playingRow][keyNumber-27];
	FastLED.show();
	}
	//Here's our selector. To get four keymappings I'll do binary
	
	// selector description: the keys, when pressed, add to selectorbin. pressing selector sets it to that. when the key comes off, selectorbin is reduced by what it was
	//to toggle, insert the following into each if(/#/#keynumber) for the decider keys.	
		

	//a0, 21, is 1, b0, note#23, is 2, c1,note#24, is 3.  A Sharp, note#22, is the confirmation.

	if(keyNumber==22)
	{
		playingRow=flag1+flag2+flag3;
	Serial.print("STATUS DISP: "); 
	Serial.print(flag1);
	Serial.print(flag2);
	Serial.print(flag3);
	Serial.print(playingRow);
	flag1 = 0;
	flag2 = 0;
	flag3 = 0;
	}	
	if(keyNumber==21)
	{
		if(flag1==1)
		{
		flag1 = 0;
		
		Serial.print("flag1 is: "+flag1);
		}
		else
		{
		flag1 = 1;
		Serial.print("flag1 is: "+flag1);
		}	
	}
	else if(keyNumber==23)
	{
		if(flag2==2)
		{
		flag2 = 0;
		
		Serial.print("flag2 is: "+flag2);
		}
		else
		{
		flag2 = 2;
		Serial.print("flag2 is: "+flag2);
		}	
	}
	else if(keyNumber==24)
	{
		if(flag3==3)
		{
		flag3 = 0;
		
		Serial.print("flag3 is: "+flag3);
		}
		else
		{
		flag3 = 3;
		Serial.print("flag3 is: "+flag3);
		}	
	}
            
	
	//ACTIVATOR, turns us on or off.           
         if(keyNumber==106)
          {
            Serial.print("FLAG= "+flag);
          if(flag !=0)
            {
             flag = 0;
            }
          }
              else if(keyNumber==107)
          {
		Serial.print("FLAG= "+flag);
              if(flag==0)
              {
                flag=1;
              }
            
          }
              else if(keyNumber==108)
          {
           if(flag==1)
           { 
            Serial.print("LIGHTSTATTUS= ");
            if(flag=1)
            if(lightsOn)
            {
              Serial.print("off");
              lightsOn = false;
            }
            else
            {
            Serial.print("ON");
              lightsOn = true;
              return;
            }
            Serial.println();
            return;
           }
	}
   
}


void killthelights(int keyNumber)
{ //Lowest key#:25
  //Highest key#:104
  //median key#: 65
  
  //Lowest key: 21
  //Highest: 108

  uint32_t color = 0;
  if(keyNumber>27&&keyNumber<106)
	{
	leds[144- ((keyNumber-27)*2)] = color;
	leds[144- ((keyNumber-27)*2)+1] = color;
	FastLED.show();
	}
}

